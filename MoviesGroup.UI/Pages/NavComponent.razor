@* <nav class="navbar d-flex justify-content-between mx-3">
    <a class="navbar-brand" href="#"><img src="images/ikea.png" alt="Ikea logo" /></a>
    <div class="input-group flex-nowrap search-width">
        <input type="text" class="form-control rounded-0" placeholder="Username" aria-label="Username" aria-describedby="addon-wrapping">
        <span class="input-group-text rounded-0" id="addon-wrapping"><i class="bi bi-search"></i></span>
    </div>
    <div class="d-flex justify-content-between ">
        <div class="dropdown">
            <button class=" rounded-0 btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-lock"></i> Account
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#">Action</a></li>
                <li><a class="dropdown-item" href="#">Another action</a></li>
                <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
        </div>
        <div>
            <div class="position-relative">
                <button id="cart-button" type="button"
                        data-bs-toggle="modal" data-bs-target="#cart"
                        class="btn btn-outline-success rounded-0">
                    <i class="bi bi-cart"></i>
                </button>
                <div class="cart-count bg-danger text-white rounded-circle position-absolute">@UICartService!.CartItems.Count</div>
                <div class="cart-count bg-danger text-white rounded-circle position-absolute"> @UICartService!.CartItems.Count</div>
            </div>
            <div></div>
        </div>
    </div>
</nav> *@

<nav class="navbar navbar-expand-lg bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#"><img src="images/SiteIcon3.png" alt="Site logo" /></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggler2" aria-controls="navbarToggler2" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarToggler2">
            <ul class="navbar-nav d-flex justify-content-between mx-3 me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active text-white" aria-current="page" href="#">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
            </ul>
            <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
            <div>
                <div class="position-relative">
                    <button id="cart-button" type="button"
                            data-bs-toggle="modal" data-bs-target="#cart"
                            class="btn btn-outline-success rounded-0">
                        <i class="bi bi-cart"></i>
                    </button>
                    <div class="cart-count bg-danger text-white rounded-circle position-absolute d-flex align-items-center justify-content-center" style="top: -5px; right: -5px; width: 17px; height: 17px; font-size: 10px;">10</div>
                </div>
                <div></div>
            </div>
        </div>
    </div>
</nav>
@* <CartComponent OnRemoveCartItem="OnRemoveCartItem" CartItems="UICartService.CartItems" /> @*22-02-22*@
<CartComponent />

@code {
    // [Parameter] public UIService? UICartService { get; set; }

    // protected override async Task OnParametersSetAsync()
    // {
    //     UICartService!.CartItems =
    //         await UICartService!.ReadStorage<List<CartItemDTO>>("CartItems") ?? [];
    // }

    // async Task OnRemoveCartItem(CartItemDTO? cartItem)
    // {
    //     UICartService!.CartItems.Remove(cartItem);
    //     await UICartService!.SaveToStorage("CartItems", UICartService!.CartItems);
    // }
}
