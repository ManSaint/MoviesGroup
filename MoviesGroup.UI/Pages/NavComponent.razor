
<nav class="navbar navbar-expand-lg bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#"><img src="images/SiteLogo2.png" alt="Site logo" /></a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggler2" aria-controls="navbarToggler2" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarToggler2">
            <ul class="navbar-nav d-flex justify-content-between mx-3 me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active text-white" aria-current="page" href="#">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
            </ul>
            <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
            <div>
                <div class="position-relative">
                    <button id="cart-button" type="button"
                            data-bs-toggle="modal" data-bs-target="#cart"
                            class="btn btn-outline-success rounded-0">
                        <i class="bi bi-cart"></i>
                    </button>
                    <div class="cart-count badge rounded-pill text-bg-danger position-absolute" style="top: -10px; right: -10px;">@UICartService!.CartItems.Count</div>
                </div>
                <div></div>
            </div>
        </div>
    </div>
</nav>
<CartComponent OnRemoveCartItem="OnRemoveCartItem" CartItems="UICartService.CartItems" /> 
<CartComponent />

@code {
    [Parameter] public UIService? UICartService { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        UICartService!.CartItems =
            await UICartService!.ReadStorage<List<CartItemDTO>>("CartItems") ?? [];
    }

    async Task OnRemoveCartItem(CartItemDTO? cartItem)
    {
        UICartService!.CartItems.Remove(cartItem);
        await UICartService!.SaveToStorage("CartItems", UICartService!.CartItems);
    }
}
